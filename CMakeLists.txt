# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

# Enable support for MSVC_RUNTIME_LIBRARY
cmake_policy(SET CMP0091 NEW)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(UnknownUtils
	LANGUAGES
		CXX
)

# Target: UnknownUtils-LLVMDemangle
set(UnknownUtils-LLVMDemangle_SOURCES
	"UnknownUtils-LLVMDemangle/UnknownUtils.Allocator.cpp"
	"UnknownUtils-LLVMDemangle/UnknownUtils.Demangle.cpp"
	"UnknownUtils-LLVMDemangle/UnknownUtils.ItaniumDemangle.cpp"
	"UnknownUtils-LLVMDemangle/UnknownUtils.MicrosoftDemangle.cpp"
	"UnknownUtils-LLVMDemangle/UnknownUtils.MicrosoftDemangleNodes.cpp"
	"include/unknown/Demangle/Allocator.h"
	"include/unknown/Demangle/Compiler.h"
	"include/unknown/Demangle/Demangle.h"
	"include/unknown/Demangle/DemangleConfig.h"
	"include/unknown/Demangle/ItaniumDemangle.h"
	"include/unknown/Demangle/MicrosoftDemangle.h"
	"include/unknown/Demangle/MicrosoftDemangleNodes.h"
	"include/unknown/Demangle/StringView.h"
	"include/unknown/Demangle/Utility.h"
	cmake.toml
)

add_library(UnknownUtils-LLVMDemangle)

target_sources(UnknownUtils-LLVMDemangle PRIVATE ${UnknownUtils-LLVMDemangle_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${UnknownUtils-LLVMDemangle_SOURCES})

target_compile_features(UnknownUtils-LLVMDemangle PUBLIC
	cxx_std_20
)

target_include_directories(UnknownUtils-LLVMDemangle PUBLIC
	include
)

